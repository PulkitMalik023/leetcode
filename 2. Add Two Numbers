https://leetcode.com/problems/add-two-numbers/




class Solution {
public:
    // first add the value + carry(intialy 0) then check that value is greater than 10 than last digit will be linked list and first will become carry and when the sum is smaller then =9 then make carry zero and
    // if length of both are not same then reverse them add 0 to front and then reverse them again 
    // at last if carry is not zero then make a node of carry value and append it to the ans
    
    ListNode* reverse(ListNode* head){
        ListNode* prev=NULL;
        ListNode* curr=head;
        while(curr!=NULL){
            ListNode* temp=curr->next;
            curr->next=prev;
            prev=curr;
            curr=temp;
        }
        return prev;
    }
    
    ListNode* helper(ListNode* head,int len){
        head=reverse(head);
        while(len!=0){
            len--;
            ListNode* n=new ListNode(0);
            n->next=head;
            head=n;
        }
        head=reverse(head);
        return head;
    }
    
    int length(ListNode* head){
        int count=0;
        while(head!=NULL){
            head=head->next;
            count++;
        }
        return count;
    }
    
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        int len=length(l1);
        int len2=length(l2);
        
        if(len - len2  > 0){
            l2=helper(l2,len-len2);
        }
        else if(len - len2 <0){
            l1=helper(l1,abs(len-len2));
        }
        
        ListNode* head=NULL;
        ListNode* tail=NULL;
        
        int carry=0;
        
        while(l1!=NULL && l2!=NULL){
            int sum=l1->val+l2->val+carry;
            if(sum <=9){
                carry=0;
                ListNode* n=new ListNode(sum);
                if(head==NULL){
                    head=n;
                    tail=n;
                }
                else{
                    tail->next=n;
                    tail=n;
                }
                
            }
            else if(sum >9){
                int a=sum%10; // last digit added to linked list
                int b=sum/10; // first digit will br carry
                carry=b;
                ListNode* n=new ListNode(a);
                if(head==NULL){
                    head=n;
                    tail=n;
                }
                else{
                    tail->next=n;
                    tail=n;
                }
            }
            l1=l1->next;
            l2=l2->next;
        }
        
        if(carry!=0){
            ListNode* n=new ListNode(carry);
            tail->next=n;
            
        }
        
        return head;
    }
};
