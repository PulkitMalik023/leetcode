https://leetcode.com/problems/find-the-town-judge/




class Solution {
public:
    int findJudge(int n, vector<vector<int>>& trust) {
        if(trust.size() == 0 && n==1) return 1;
     //   if(trust.size() == 0 && n==2) return 2;
        unordered_map<int,int> map;
        for(int i=0;i<trust.size();i++){
            if(map[trust[i][0]] == 0){
                map[trust[i][0]]++;
            }
             if(map[trust[i][1]] == 0){
                map[trust[i][1]]++;
            }
        }
        vector<int> v;  /// last wale     2  3
        for(int i=0;i<trust.size();i++){
            v.push_back(trust[i][1]);
        }
        
       vector<int> v2;    //   1  2
         for(int i=0;i<trust.size();i++){
            v2.push_back(trust[i][0]);
        }
        
        int ans=-1;
        
       for(int i=0;i<v.size();i++){
           int flag=0;
           for(int j=0;j<v2.size();j++){
               if(v2[j] == v[i]) {
                   flag=1;
                   break;
               }
           }
           if(flag==0) ans= v[i];
       }
        
        int flag=0;
        int count=0;
        for(int i=0;i<trust.size();i++){
            if(trust[i][0] == ans ){
                flag=1;
                break;
            }
            else if(trust[i][1] ==ans) count++;
        }
        
        if(flag==0 && count == map.size()-1) {
            return ans;
            
        }
        return -1;
    }
};
