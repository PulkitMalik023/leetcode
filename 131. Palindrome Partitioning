https://leetcode.com/problems/palindrome-partitioning/




class Solution {
public:
    
    bool ispalindrome(string s){
        string temp=s;
        reverse(temp.begin(),temp.end());
        if(temp ==  s) return true;
        return false;
    }
    
    void helper(vector<vector<string>>& ans,vector<string> v,string s){
        if(s.size() == 0){
            ans.push_back(v);
        }
        
        for(int i=0;i<s.size();i++){
            string s1=s.substr(0,i+1);
            string s2=s.substr(i+1); // remaining string 
            if(ispalindrome(s1)){
                v.push_back(s1);
                helper(ans,v,s2);
                v.pop_back();
            }
        }
        
    }
    
    vector<vector<string>> partition(string s) {
        vector<vector<string>> ans;
        vector<string> v;
        
        helper(ans,v,s);
        return ans;
            
    }
};
