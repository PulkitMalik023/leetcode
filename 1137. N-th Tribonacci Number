https://leetcode.com/problems/n-th-tribonacci-number/




class Solution {
public:
    
    int helper(int n,int arr[]){
        
        if(n==0){
            arr[n]=n;
            return n;
        }
        
        if(n==1) {
            arr[n]=n;
            return n;
        }
        
        if(n==2){
            arr[2]=1;
            return 1;
        }
        
        
        if(arr[n-1] == -1){
            arr[n-1]=helper(n-1,arr);
        }
        
        if(arr[n-2] == -1){
            arr[n-2]=helper(n-2,arr);
        }
        
        if(arr[n-3]==-1){
            arr[n-3]=helper(n-3,arr);
        }
        
        arr[n]=arr[n-1]+arr[n-2]+arr[n-3];
        return arr[n];
        
    }
    
    
    int tribonacci(int n) {
        int arr[n+1];
        for(int i=0;i<n+1;i++){
            arr[i]=-1;
        }
        
        return helper(n,arr);
        
    }
};
